# .github/workflows/build-wireshark-win64.yml
name: Build Wireshark Win64 (custom asterix)

on:
  workflow_dispatch:
    inputs:
      WIRESHARK_TAG:
        description: "Wireshark git tag (e.g., v4.4.8)"
        required: false
        default: "v4.4.8"
  push:
    branches: [ main, master ]

jobs:
  build-win64:
    runs-on: windows-latest
    env:
      CONFIG: RelWithDebInfo

    steps:
      - name: Checkout this repo (contains only packet-asterix.c)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install build tools (CMake, NSIS)
        shell: powershell
        run: |
          choco install -y cmake --installargs 'ADD_CMAKE_TO_PATH=System'
          choco install -y nsis 7zip

      - name: Clone Wireshark sources
        shell: bash
        run: |
          git clone https://gitlab.com/wireshark/wireshark.git
          cd wireshark
          git fetch --tags --force
          git checkout "${{ github.event.inputs.WIRESHARK_TAG || 'v4.4.8' }}"

      - name: Inject custom packet-asterix.c
        shell: powershell
        run: |
          Copy-Item -Force ".\packet-asterix.c" ".\wireshark\epan\dissectors\packet-asterix.c"

      # --- vcpkg classic mode: install GLib + pkgconf -------------------------
      - name: Bootstrap vcpkg
        shell: powershell
        run: |
          git clone https://github.com/microsoft/vcpkg $env:RUNNER_TEMP\vcpkg
          & "$env:RUNNER_TEMP\vcpkg\bootstrap-vcpkg.bat"
        env:
          VCPKG_ROOT: ${{ runner.temp }}\vcpkg

      - name: Install GLib and pkgconf via vcpkg (x64-windows)
        shell: powershell
        env:
          VCPKG_ROOT: ${{ runner.temp }}\vcpkg
        run: |
          & "$env:VCPKG_ROOT\vcpkg.exe" install glib:x64-windows pkgconf:x64-windows

      # Expose pkg-config and .pc paths so CMake's FindGLIB2 works
      - name: Set up pkg-config env
        id: pcvars
        shell: powershell
        env:
          VCPKG_ROOT: ${{ runner.temp }}\vcpkg
        run: |
          $pkgconf = Join-Path $env:VCPKG_ROOT 'installed\x64-windows\tools\pkgconf\pkgconf.exe'
          $pc1     = Join-Path $env:VCPKG_ROOT 'installed\x64-windows\lib\pkgconfig'
          $pc2     = Join-Path $env:VCPKG_ROOT 'installed\x64-windows\share\pkgconfig'
          echo "PKG_CONFIG=$pkgconf"            | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "PKG_CONFIG_PATH=$pc1;$pc2"      | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "CMAKE_PREFIX_PATH=$($env:VCPKG_ROOT)\installed\x64-windows" | Out-File -FilePath $env:GITHUB_ENV -Append

      # --- Configure & build with MSVC (no Ninja needed) ----------------------
      - name: Configure (CMake + VS 2022 x64)
        shell: bash
        run: |
          cmake -S wireshark -B build -G "Visual Studio 17 2022" -A x64

      - name: Build Wireshark
        shell: bash
        run: cmake --build build --config "$CONFIG" --target wireshark

      - name: Prep NSIS packaging
        shell: bash
        run: cmake --build build --config "$CONFIG" --target wireshark_nsis_prep

      - name: Build NSIS installer
        shell: bash
        run: cmake --build build --config "$CONFIG" --target wireshark_nsis

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: wireshark-installer
          path: build/packaging/nsis/*.exe
